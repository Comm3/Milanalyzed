fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", title = "Nascite per decesso") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso", alpha = "Nascite") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
?labs
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso", fill = c(1,2,3), alpha = "Nascite") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25,
labels = c("Meno di 1", "Tra 1 e 2", "Oltre 2")) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso",
fill = c(1,2,3),
alpha = "Nascite") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
View(milan_qt.f)
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE, labels = c("Meno di 1", "Tra 1 e 2", "Oltre 2")),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso",
fill = c(1,2,3),
alpha = "Nascite") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
# Second approach
# lnd.stamen <- ggmap(get_map(location = b, source = "stamen", maptype = "toner",
# crop = T))
lnd.gmaps <- ggmap(get_map(location = b, source = "google", maptype = "roadmap",
crop = T))
lnd.osm <- ggmap(get_map(location = b, source = "osm", maptype = "roadmap",
crop = T))
# library(scales)
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE, labels = c("Meno di 1", "Tra 1 e 2", "Oltre 2")),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso",
alpha = "Nascite 2014") +
ggtitle("Tasso di natalità 2003/2014") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
popolazione <- read.csv(file = "Dati/dataset/pop_sto_quartiere_1999-2014.csv",
header = TRUE,
sep = ";",
fileEncoding = "latin1")
View(popolazione)
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza)
# library(maptools)
library(dplyr)
library(stringdist)
library(rgdal)
library(ggplot2)
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza)
View(popolazione_subset)
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(tot = sum(X2014))
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
mutate(tot = as.numeric(X2014))
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
mutate(X2014 = as.numeric(X2014))
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
mutate(X2014 = as.numeric(X2014)) %>%
summarise(tot = sum(X2014))
View(popolazione_subset)
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
mutate(X2014 = as.numeric(X2014)) %>%
summarise(tot = sum(X2014)) %>%
filter(Cittadinanza != "Italia")
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
mutate(X2014 = as.numeric(X2014)) %>%
summarise(tot = sum(X2014)) %>%
filter(Cittadinanza != "Italia", tot == max(tot))
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
mutate(X2014 = as.numeric(X2014)) %>%
summarise(tot = sum(X2014)) %>%
group_by(Quartiere) %>%
filter(Cittadinanza != "Italia", tot == max(tot))
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
mutate(X2014 = as.numeric(X2014)) %>%
summarise(tot = sum(X2014))
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
mutate(X2014 = as.numeric(X2014)) %>%
summarise(tot = sum(X2014)) %>%
filter(Cittadinanza != "Italia") %>%
group_by(Quartiere) %>%
filter(tot == max(tot))
popolazione <- read.csv(file = "Dati/dataset/pop_sto_quartiere_1999-2014.csv",
header = TRUE,
sep = ";",
fileEncoding = "latin1") %>%
mutate(X2014 = as.numeric(X2014))
popolazione_qt <- select(popolazione, Quartiere, X2014) %>%
summarise(tot = sum(X2014))
popolazione_qt <- select(popolazione, Quartiere, X2014)
popolazione_qt <- select(popolazione, Quartiere, X2014) %>%
group_by(Quartiere) %>%
summarise(tot = sum(X2014))
popolazione_qt <- select(popolazione, Quartiere, X2014) %>%
group_by(Quartiere) %>%
summarise(tot_qt = sum(X2014))
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(tot = sum(X2014)) %>%
filter(Cittadinanza != "Italia") %>%
group_by(Quartiere) %>%
filter(tot == max(tot)) %>%
inner_join(popolazione_qt, by = "Quartiere") %>%
mutate(prc = round(tot / tot_qt))
View(popolazione_subset)
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(tot = sum(X2014)) %>%
filter(Cittadinanza != "Italia") %>%
group_by(Quartiere) %>%
filter(tot == max(tot)) %>%
inner_join(popolazione_qt, by = "Quartiere") %>%
mutate(prc = round(tot / tot_qt * 100))
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(tot = sum(X2014)) %>%
filter(Cittadinanza != "Italia") %>%
group_by(Quartiere) %>%
filter(tot == max(tot)) %>%
inner_join(popolazione_qt, by = "Quartiere") %>%
mutate(prc = round(tot / tot_qt * 100)) %>%
inner_join(
quartieri_dict %>%
select(id, Quartiere = q_synt)
, by = "Quartiere") %>%
mutate(id = as.character(id))
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(tot = sum(X2014)) %>%
filter(Cittadinanza != "Italia") %>%
group_by(Quartiere) %>%
filter(tot == max(tot)) %>%
inner_join(popolazione_qt, by = "Quartiere") %>%
mutate(prc = round(tot / tot_qt * 100))
View(popolazione_subset)
quartieri_dict %>%
select(id, Quartiere = q_synt)
popolazione_subset <-
quartieri_dict %>%
select(id, Quartiere = q_synt) %>%
inner_join(
popolazione_subset
, by = "Quartiere") %>%
mutate(id = as.character(id))
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(tot = sum(X2014)) %>%
filter(Cittadinanza != "Italia") %>%
group_by(Quartiere) %>%
filter(tot == max(tot)) %>%
inner_join(popolazione_qt, by = "Quartiere") %>%
mutate(prc = round(tot / tot_qt * 100), as.character(Quartiere))
popolazione_subset <-
quartieri_dict %>%
select(id, Quartiere = as.character(q_synt)) %>%
inner_join(
popolazione_subset
, by = "Quartiere") %>%
mutate(id = as.character(id))
popolazione_subset <-
quartieri_dict %>%
select(id, as.character(q_synt)) %>%
inner_join(
popolazione_subset
, by = "Quartiere") %>%
mutate(id = as.character(id))
popolazione_subset <-
quartieri_dict %>%
mutate(Quartiere = as.character(q_synt)) %>%
select(id, Quartiere) %>%
inner_join(
popolazione_subset
, by = "Quartiere") %>%
mutate(id = as.character(id))
popolazione_subset <-
quartieri_dict %>%
mutate(Quartiere = as.character(q_synt))
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(tot = sum(X2014)) %>%
filter(Cittadinanza != "Italia") %>%
group_by(Quartiere) %>%
filter(tot == max(tot)) %>%
inner_join(popolazione_qt, by = "Quartiere") %>%
mutate(prc = round(tot / tot_qt * 100), as.character(Quartiere))
popolazione_subset <-
quartieri_dict %>%
mutate(Quartiere = as.character(q_synt)) %>%
select(id, Quartiere) %>%
inner_join(
popolazione_subset
, by = "Quartiere") %>%
mutate(id = as.character(id))
popolazione_subset <-
quartieri_dict %>%
mutate(Quartiere = as.character(q_synt)) %>%
select(id, Quartiere) %>%
inner_join(
popolazione_subset
, by = "Quartiere")
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(tot = sum(X2014)) %>%
filter(Cittadinanza != "Italia") %>%
group_by(Quartiere) %>%
filter(tot == max(tot)) %>%
inner_join(popolazione_qt, by = "Quartiere") %>%
mutate(prc = round(tot / tot_qt * 100), as.character(Quartiere))
popolazione_subset <-
quartieri_dict %>%
mutate(Quartiere = as.character(q_synt)) %>%
select(id, Quartiere) %>%
inner_join(
popolazione_subset
, by = "Quartiere")
quartieri_dict %>%
mutate(Quartiere = as.character(q_synt)) %>%
select(id, Quartiere)
quartieri_dict %>%
mutate(Quartiere = as.character(q_synt)) %>%
select(id, Quartiere) %>%
inner_join(
popolazione_subset
, by = "Quartiere")
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(tot = sum(X2014)) %>%
filter(Cittadinanza != "Italia") %>%
group_by(Quartiere) %>%
filter(tot == max(tot)) %>%
inner_join(popolazione_qt, by = "Quartiere") %>%
mutate(prc = round(tot / tot_qt * 100), as.character(Quartiere))
quartieri_dict %>%
mutate(Quartiere = as.character(q_synt)) %>%
select(id, Quartiere) %>%
inner_join(
popolazione_subset
, by = "Quartiere")
popolazione_subset <-
quartieri_dict %>%
mutate(Quartiere = as.character(q_synt)) %>%
select(id, Quartiere) %>%
inner_join(
popolazione_subset
, by = "Quartiere") %>%
mutate(id = as.character(id))
View(popolazione_subset)
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(tot = sum(X2014)) %>%
filter(Cittadinanza != "Italia") %>%
group_by(Quartiere) %>%
filter(tot == max(tot)) %>%
inner_join(popolazione_qt, by = "Quartiere") %>%
mutate(prc = round(tot / tot_qt * 100), as.character(Quartiere))
popolazione_subset <-
quartieri_dict %>%
mutate(Quartiere = as.character(q_synt)) %>%
select(id, Quartiere) %>%
inner_join(
popolazione_subset
, by = "Quartiere")
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(tot = sum(X2014)) %>%
filter(Cittadinanza != "Italia") %>%
group_by(Quartiere) %>%
filter(tot == max(tot)) %>%
inner_join(popolazione_qt, by = "Quartiere") %>%
mutate(prc = round(tot / tot_qt * 100), as.character(Quartiere))
View(popolazione_subset)
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(tot = sum(X2014)) %>%
filter(Cittadinanza != "Italia") %>%
group_by(Quartiere) %>%
filter(tot == max(tot)) %>%
inner_join(popolazione_qt, by = "Quartiere") %>%
mutate(prc = round(tot / tot_qt * 100), Quartiere = as.character(Quartiere))
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
mutate(Quartiere = as.character(Quartiere)) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(tot = sum(X2014)) %>%
filter(Cittadinanza != "Italia") %>%
group_by(Quartiere) %>%
filter(tot == max(tot)) %>%
inner_join(popolazione_qt, by = "Quartiere") %>%
mutate(prc = round(tot / tot_qt * 100))
popolazione <- read.csv(file = "Dati/dataset/pop_sto_quartiere_1999-2014.csv",
header = TRUE,
sep = ";",
fileEncoding = "latin1") %>%
mutate(X2014 = as.numeric(X2014), Quartiere = as.character(Quartiere))
popolazione_qt <- select(popolazione, Quartiere, X2014) %>%
group_by(Quartiere) %>%
summarise(tot_qt = sum(X2014))
popolazione_subset <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(tot = sum(X2014)) %>%
filter(Cittadinanza != "Italia") %>%
group_by(Quartiere) %>%
filter(tot == max(tot)) %>%
inner_join(popolazione_qt, by = "Quartiere") %>%
mutate(prc = round(tot / tot_qt * 100))
popolazione_subset <-
quartieri_dict %>%
mutate(Quartiere = as.character(q_synt)) %>%
select(id, Quartiere) %>%
inner_join(
popolazione_subset
, by = "Quartiere") %>%
mutate(id = as.character(id))
View(popolazione_subset)
milan_qt.wgs84.f <- left_join(milan_qt.wgs84.f, popolazione_subset, by = "id")
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = Cittadinanza,
alpha = prc
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso",
alpha = "Nascite 2014") +
ggtitle("Tasso di natalità 2003/2014") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = Cittadinanza,
alpha = prc
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(fill = "Nazionalità",
alpha = "Nascite 2014") +
ggtitle("Tasso di natalità 2003/2014") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = Cittadinanza,
alpha = prc
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(fill = "Nazionalità",
alpha = "Nascite 2014") +
ggtitle("Seconda Nazionalità del quartiere 2014") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
View(milan_qt.f)
select(popolazione, Quartiere, Cittadinanze, X2014) %>%
spread(Quartiere, Cittadinanza)
select(popolazione, Quartiere, Cittadinanza, X2014) %>%
spread(Quartiere, Cittadinanza)
install.packages("tidur")
install.packages("tidyr")
library(tidyr)
select(popolazione, Quartiere, Cittadinanza, X2014) %>%
spread(Quartiere, Cittadinanza)
select(popolazione, Quartiere, Cittadinanza, X2014) %>%
spread(Quartiere, Cittadinanza, X2014)
select(popolazione, Quartiere, Cittadinanza, X2014) %>%
spread(Cittadinanza, X2014)
select(popolazione, Quartiere, Cittadinanza, X2014) %>%
spread(Cittadinanza)
select(popolazione, Quartiere, Cittadinanza, X2014) %>%
spread(Cittadinanza, X2014)
View(popolazione)
select(popolazione, Quartiere, Cittadinanza, X2014)
select(popolazione, Quartiere, Cittadinanza, X2014) %>%
spread(Cittadinanza, X2014)
popolazione_qt <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(pop = sum(X2014))
popolazione_qt <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(pop = sum(X2014))
View(popolazione_qt)
popolazione_qt <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(pop = sum(X2014)) %>%
spread(Cittadinanza, X2014)
popolazione_qt <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(pop = sum(X2014)) %>%
spread(Cittadinanza, pop)
View(popolazione_qt)
popolazione_qt <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(pop = sum(X2014)) %>%
spread(Cittadinanza, pop) %>%
mutate(sum = rowSums(.[2:ncol(.)]))
View(popolazione_qt)
popolazione_qt <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(pop = sum(X2014)) %>%
spread(Cittadinanza, pop) %>%
mutate(sum = rowSums(.[2:ncol(.)], na.rm = TRUE))
popolazione_qt <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(pop = sum(X2014)) %>%
spread(Cittadinanza, pop) %>%
ungroup() %>%
mutate(sum = rowSums(.[2:ncol(.)], na.rm = TRUE))
popolazione_qt <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(pop = sum(X2014)) %>%
spread(Cittadinanza, pop) %>%
replace(is.na(.), 0) %>%
mutate(sum = rowSums(.[2:ncol(.)]))
popolazione_qt <- select(popolazione, Quartiere, Cittadinanza, X2014) %>%
group_by(Quartiere, Cittadinanza) %>%
summarise(pop = sum(X2014)) %>%
spread(Cittadinanza, pop) %>%
replace(is.na(.), 0) %>%
mutate(sum = rowSums(.[2:4]))
popolazione_qt <-   mutate(sum = rowSums(.[2:4]))
popolazione_qt <-   popolazione_qt %>% mutate(sum = rowSums(.[2:4]))
popolazione_qt <-   popolazione_qt %>% mutate(sum = rowSums(.))
popolazione_qt <-   popolazione_qt %>% ungroup() %>% mutate(sum = rowSums(.[2:4]))
