colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
b <- bbox(milan_zone.wgs84)
b[1, ] <- (b[1, ] - mean(b[1, ])) * 1.5 + mean(b[1, ])
b[2, ] <- (b[2, ] - mean(b[2, ])) * 1.5 + mean(b[2, ])
b <- bbox(milan_zone.wgs84)
b[1, ] <- (b[1, ] - mean(b[1, ])) * 1.5 + mean(b[1, ])
b[2, ] <- (b[2, ] - mean(b[2, ])) * 1.5 + mean(b[2, ])
b[1, ] <- (b[1, ] - mean(b[1, ])) * 1.5 + mean(b[1, ])
b[2, ] <- (b[2, ] - mean(b[2, ])) * 1.5 + mean(b[2, ])
b <- bbox(milan_zone.wgs84)
b[1, ] <- (b[1, ] - mean(b[1, ])) * 1.5 + mean(b[1, ])
b[2, ] <- (b[2, ] - mean(b[2, ])) * 1.5 + mean(b[2, ])
# Second approach
# lnd.stamen <- ggmap(get_map(location = b, source = "stamen", maptype = "toner",
# crop = T))
lnd.gmaps <- ggmap(get_map(location = b, source = "google", maptype = "roadmap",
crop = T
))
# library(scales)
lnd.gmaps +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
b <- bbox(milan_zone.wgs84)
b[1, ] <- (b[1, ] - mean(b[1, ])) * 1.5 + mean(b[1, ])
b[2, ] <- (b[2, ] - mean(b[2, ])) * 1.5 + mean(b[2, ])
# lnd.b1 <- ggmap(get_map(location = b))
# Second approach
# lnd.stamen <- ggmap(get_map(location = b, source = "stamen", maptype = "toner",
# crop = T))
lnd.gmaps <- ggmap(get_map(location = b, source = "google", maptype = "roadmap",
crop = T
))
# library(scales)
lnd.gmaps +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
b <- bbox(milan_zone.wgs84)
b[1, ] <- (b[1, ] - mean(b[1, ])) * 1.3 + mean(b[1, ])
b[2, ] <- (b[2, ] - mean(b[2, ])) * 1.3 + mean(b[2, ])
# lnd.b1 <- ggmap(get_map(location = b))
# Second approach
# lnd.stamen <- ggmap(get_map(location = b, source = "stamen", maptype = "toner",
# crop = T))
lnd.gmaps <- ggmap(get_map(location = b, source = "google", maptype = "roadmap",
crop = T
))
# library(scales)
lnd.gmaps +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
b <- bbox(milan_zone.wgs84)
b <- bbox(milan_zone.wgs84)
b[1, ] <- (b[1, ] - mean(b[1, ])) * 1.4 + mean(b[1, ])
b[2, ] <- (b[2, ] - mean(b[2, ])) * 1.4 + mean(b[2, ])
# lnd.b1 <- ggmap(get_map(location = b))
# Second approach
# lnd.stamen <- ggmap(get_map(location = b, source = "stamen", maptype = "toner",
# crop = T))
lnd.gmaps <- ggmap(get_map(location = b, source = "google", maptype = "roadmap",
crop = T
))
# library(scales)
lnd.gmaps +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
b <- bbox(milan_zone.wgs84)
(b[1, ] - mean(b[1, ])) * 1.4
b <- bbox(milan_zone.wgs84)
b[1, ] <- (b[1, ] - mean(b[1, ])) * 1.8 + mean(b[1, ])
b[2, ] <- (b[2, ] - mean(b[2, ])) * 1.4 + mean(b[2, ])
# lnd.b1 <- ggmap(get_map(location = b))
# Second approach
# lnd.stamen <- ggmap(get_map(location = b, source = "stamen", maptype = "toner",
# crop = T))
lnd.gmaps <- ggmap(get_map(location = b, source = "google", maptype = "roadmap",
crop = T
))
# library(scales)
lnd.gmaps +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
b <- bbox(milan_zone.wgs84)
b[1, ] <- (b[1, ] - mean(b[1, ])) * 1.8+ mean(b[1, ])
b[2, ] <- (b[2, ] - mean(b[2, ])) * 1.2 + mean(b[2, ])
# lnd.b1 <- ggmap(get_map(location = b))
# Second approach
# lnd.stamen <- ggmap(get_map(location = b, source = "stamen", maptype = "toner",
# crop = T))
lnd.gmaps <- ggmap(get_map(location = b, source = "google", maptype = "roadmap",
crop = T
))
# library(scales)
lnd.gmaps +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
b <- bbox(milan_zone.wgs84)
b[1, ] <- (b[1, ] - mean(b[1, ])) * 1.5 + mean(b[1, ])
b[2, ] <- (b[2, ] - mean(b[2, ])) * 1.2 + mean(b[2, ])
# lnd.b1 <- ggmap(get_map(location = b))
# Second approach
# lnd.stamen <- ggmap(get_map(location = b, source = "stamen", maptype = "toner",
# crop = T))
lnd.gmaps <- ggmap(get_map(location = b, source = "google", maptype = "roadmap",
crop = T
))
# library(scales)
lnd.gmaps +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
b[1, ] <- (b[1, ] - mean(b[1, ])) * 1.2 + mean(b[1, ])
b <- bbox(milan_zone.wgs84)
b[1, ] <- (b[1, ] - mean(b[1, ])) * 1.2 + mean(b[1, ])
b <- bbox(milan_zone.wgs84)
b[1, ] <- (b[1, ] - mean(b[1, ])) * 1.5 + mean(b[1, ])
b <- bbox(milan_zone.wgs84)
b[1, ] <- (b[1, ] - mean(b[1, ])) * 1.5 + mean(b[1, ])
b[2, ] <- (b[2, ] - mean(b[2, ])) * 1.2 + mean(b[2, ])
# lnd.b1 <- ggmap(get_map(location = b))
# Second approach
# lnd.stamen <- ggmap(get_map(location = b, source = "stamen", maptype = "toner",
# crop = T))
lnd.gmaps <- ggmap(get_map(location = b, source = "google", maptype = "roadmap",
crop = T
))
# library(scales)
lnd.gmaps +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
b <- bbox(milan_zone.wgs84)
(b[1, ] - mean(b[1, ])) * 1.5 + mean(b[1, ])
(b[1, ] - mean(b[1, ])) * 1.2 + mean(b[1, ])
(b[1, ] - mean(b[1, ])) * 1.2
(b[1, ] - mean(b[1, ])) * 1.2 + mean(b[1, ])
b <- bbox(milan_zone.wgs84)
b[1, ] <- (b[1, ] - mean(b[1, ])) * 1.2 + mean(b[1, ])
b[2, ] <- (b[2, ] - mean(b[2, ])) * 1.2 + mean(b[2, ])
# lnd.b1 <- ggmap(get_map(location = b))
# Second approach
# lnd.stamen <- ggmap(get_map(location = b, source = "stamen", maptype = "toner",
# crop = T))
lnd.gmaps <- ggmap(get_map(location = b, source = "google", maptype = "roadmap",
crop = T
))
# library(scales)
lnd.gmaps +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
lnd.osm <- ggmap(get_map(location = b, source = "osm", maptype = "roadmap",
crop = T))
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = c("Nascite per decesso", "Nascite")) +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", labels = c("Nascite per decesso", "Nascite")) +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25,
fill = "Nascite per decesso")
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite,
show_guide = FALSE
),
# alpha = 0.5,
colour = "black", size = 0.25)
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite,
),
# alpha = 0.5,
show_guide = FALSE,
colour = "black", size = 0.25)
?labs
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite,
),
# alpha = 0.5,
show_guide = FALSE,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", title = "Nascite per decesso") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
show_guide = FALSE,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", title = "Nascite per decesso") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso", alpha = "Nascite") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
?labs
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso", fill = c(1,2,3), alpha = "Nascite") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25,
labels = c("Meno di 1", "Tra 1 e 2", "Oltre 2")) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso",
fill = c(1,2,3),
alpha = "Nascite") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
View(milan_qt.f)
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE, labels = c("Meno di 1", "Tra 1 e 2", "Oltre 2")),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso",
fill = c(1,2,3),
alpha = "Nascite") +
ggtitle("Tasso di natalità") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
# Second approach
# lnd.stamen <- ggmap(get_map(location = b, source = "stamen", maptype = "toner",
# crop = T))
lnd.gmaps <- ggmap(get_map(location = b, source = "google", maptype = "roadmap",
crop = T))
lnd.osm <- ggmap(get_map(location = b, source = "osm", maptype = "roadmap",
crop = T))
# library(scales)
lnd.osm +
geom_polygon(data = milan_qt.wgs84.f,
aes(x = long, y = lat, group = group,
fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE, labels = c("Meno di 1", "Tra 1 e 2", "Oltre 2")),
alpha = tot_nascite
),
# alpha = 0.5,
colour = "black", size = 0.25) +
geom_polygon(data = milan_zone.wgs84.f,
aes(long, lat, group = group),
fill = NA, color = "black", size = 1
) +
labs(x = "Longitudine", y = "Latitudine", fill = "Nascite per decesso",
alpha = "Nascite 2014") +
ggtitle("Tasso di natalità 2003/2014") +
# scale_fill_distiller(palette = "Greens", breaks = pretty_breaks(n = 5)) +
guides(fill = guide_legend(reverse = TRUE))
