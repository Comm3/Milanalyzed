{
    "contents" : "# library(maptools)\nlibrary(dplyr)\nlibrary(stringdist)\nlibrary(rgdal)\nlibrary(ggplot2)\n\n\n# Loading data from CSV\ndecessi <- read.csv(file = \"Dati/dataset/Morti_quartiere_2003_2014.csv\", \n                    header = TRUE, \n                    sep = \";\", \n                    fileEncoding = \"latin1\")\n\nnascite <- read.csv(file = \"Dati/dataset/Nati_quartiere_2003_2014.csv\", \n                    header = TRUE, \n                    sep = \";\", \n                    fileEncoding = \"latin1\")\n\n# Converting to attribute to same type\nnascite$Numerosità <- as.numeric(nascite$Numerosità)\n\n# Adding missing label \"Parco Sempione\"\nlevels(decessi$Quartiere) <- c(levels(decessi$Quartiere), \"Parco Sempione\")\ndecessi$Quartiere[decessi$Quartiere == \"\"] <- \"Parco Sempione\"\n\nlevels(nascite$Quartiere) <- c(levels(nascite$Quartiere), \"Parco Sempione\")\nnascite$Quartiere[nascite$Quartiere == \"\"] <- \"Parco Sempione\"\n\n# Syntesis of the data\ndecessi_synt <- decessi %>%\n  arrange(Quartiere) %>%\n  filter(Luogo_decesso == \"Milano\")  %>%\n  select(Anno_evento, Quartiere, Numerosità) %>%\n  group_by(Quartiere) %>%\n  summarize( tot_decessi = sum(Numerosità))\n  \n\nnascite_synt <- nascite %>%\n  filter(Luogo_nascita == \"Milano\")  %>%\n  select(Anno_evento, Quartiere, Numerosità) %>%\n  group_by(Quartiere) %>%\n  summarize( tot_nascite = sum(Numerosità)) %>%\n  arrange(Quartiere)\n\n\n# Dictionary of the different \"quartieri\" labels\nquartieri_dict <- data_frame(id = zone_sp@data$ID_NIL,\n                             quartiere = zone_sp@data$NIL) %>%\n  arrange(quartiere)\n\n# Mapping different quartieri label between different databases\nquartieri_map <- data_frame(q_synt = db_synt$Quartiere,\n                            quartiere = factor(\n                              sapply(db_synt$Quartiere,\n                                     # Custom function\n                                     str_match,\n                                     words = levels(quartieri_dict$quartiere))\n                              )\n                            )\n\n# Finalizing the quartieri dictioanry\nquartieri_dict <- quartieri_dict %>%\n  inner_join(quartieri_map, by = \"quartiere\")\n\n# Joined syntesis\ndb_synt <- inner_join(decessi_synt, nascite_synt, by = c(\"Quartiere\")) %>%\n  mutate(rap_nd = tot_nascite/tot_decessi,\n         tot_ricambio = tot_nascite - tot_decessi,\n         rap_nd_round = round(rap_nd))\n\ndb_synt <- quartieri_dict %>%\n  select(id, Quartiere = q_synt) %>%\n  inner_join(db_synt, by = \"Quartiere\") %>%\n  mutate(id = as.character(id))\n\n\n# Setting the map\n\nmilan_qt <- readOGR(dsn = \"Dati/quartieri\", layer = \"NILZone\")\nmilan_qt.f <- milan_qt %>%\n  fortify(region = \"ID_NIL\") %>%\n  merge(milan_qt@data, by.x = \"id\", by.y = \"ID_NIL\") %>%\n  left_join(db_synt, by = \"id\")\n\nmilan_qt.wgs84 <- spTransform(milan_qt, CRS(\"+init=epsg:4326\"))\nmilan_qt.wgs84.f <- fortify(milan_qt.wgs84, region = \"ID_NIL\") %>%\n  merge(milan_qt.wgs84@data, by.x = \"id\", by.y = \"ID_NIL\") %>%\n  left_join(db_synt,\n            by = \"id\")\n\nmilan_zone <- readOGR(dsn = \"Dati/zone_dec\", layer = \"ZoneDecentramento\")\nmilan_zone.wgs84 <- spTransform(milan_zone, CRS(\"+init=epsg:4326\"))\nmilan_zone.wgs84.f <- fortify(milan_zone.wgs84, region = \"ZONADEC\") %>%\n  merge(milan_zone@data, by.x = \"id\", by.y = \"ZONADEC\")\n\n\n# Simple map\n# Map <- ggplot(milan_qt.f, aes(long, lat, group = group, fill = as.factor(rap_nd_round))) +\n#   geom_polygon() +\n#   coord_equal() +\n#   labs(x = \"Dist. Latitudine (m)\", y = \"Dist. Longitudine (m)\", fill = \"Nascite per decessi\") + \n#   ggtitle(\"Tasso di natalità\")\n# \n# Map + scale_fill_discrete()\n\n# First approach\n\nlibrary(ggmap)\n\n# b <- bbox(milan_qt.wgs84)\nb <- bbox(milan_zone.wgs84)\nb[1, ] <- (b[1, ] - mean(b[1, ])) * 1.2 + mean(b[1, ])\nb[2, ] <- (b[2, ] - mean(b[2, ])) * 1.2 + mean(b[2, ])\n# lnd.b1 <- ggmap(get_map(location = b))\n\n\n\n# Second approach\n# lnd.stamen <- ggmap(get_map(location = b, source = \"stamen\", maptype = \"toner\", \n# crop = T))\nlnd.gmaps <- ggmap(get_map(location = b, source = \"google\", maptype = \"roadmap\", \n    crop = T))\nlnd.osm <- ggmap(get_map(location = b, source = \"osm\", maptype = \"roadmap\", \n                           crop = T))\n\n# library(scales)\n\nlnd.osm + \n  geom_polygon(data = milan_qt.wgs84.f, \n              aes(x = long, y = lat, group = group, \n                  fill = cut(rap_nd, breaks = c(0,1,2,Inf), include.lowest = TRUE, right = FALSE, labels = c(\"Meno di 1\", \"Tra 1 e 2\", \"Oltre 2\")),\n                  alpha = tot_nascite\n                  ), \n              # alpha = 0.5, \n              colour = \"black\", size = 0.25) + \n  geom_polygon(data = milan_zone.wgs84.f,\n               aes(long, lat, group = group),\n               fill = NA, color = \"black\", size = 1\n  ) +\n  labs(x = \"Longitudine\", y = \"Latitudine\", fill = \"Nascite per decesso\",\n       alpha = \"Nascite 2014\") + \n  ggtitle(\"Tasso di natalità 2003/2014\") +\n  # scale_fill_distiller(palette = \"Greens\", breaks = pretty_breaks(n = 5)) +\n  guides(fill = guide_legend(reverse = TRUE))\n",
    "created" : 1448693879779.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1650237212",
    "id" : "CF3DDC43",
    "lastKnownWriteTime" : 1448833457,
    "path" : "~/Development/Milanalytics/Scripts/Zone decentrate.R",
    "project_path" : "Scripts/Zone decentrate.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}